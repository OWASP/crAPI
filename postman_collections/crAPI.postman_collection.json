{
  "collection": {
    "info": {
      "_postman_id": "11111111-1111-1111-1111-111111111111",
      "name": "crAPI Accepted",
      "description": "crAPI Training Scripts",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-01-09T18:25:19.000Z",
      "uid": "11111111-1111-1111-1111-111111111111",
      "createdAt": null,
      "lastUpdatedBy": null
    },
    "item": [
      {
        "name": "Signup example.com",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "212edd4c-4269-4ec5-84f7-bcddae94fbf2",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "d91fc02a-4d94-4f60-a834-1508ba0d69a7",
              "exec": [
                "const {Property} = require('postman-collection');",
                "var xff = Property.replaceSubstitutions('{{$randomIP}}');",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);",
                "pm.request.headers.remove('X-Forwarded-For');",
                "pm.request.headers.add({ ",
                "    // These keys appears when you set a header by hand. Just for fun they are here",
                "    disabled: false,",
                "    // Your header, effectively",
                "    key: 'X-Forwarded-For', ",
                "    value: xff",
                "});",
                "let name = Property.replaceSubstitutions('{{$randomFirstName}}.{{$randomLastName}}');",
                "pm.collectionVariables.set(\"name\", name);",
                "let newName = Property.replaceSubstitutions('{{$randomFirstName}}.{{$randomLastName}}');",
                "pm.collectionVariables.set(\"new_name\", newName);",
                "let email = name+\"@example.com\";",
                "let newEmail = newName+\"@example.com\";",
                "let pass = Property.replaceSubstitutions(\"{{$randomPassword}}\");",
                "let phone = Property.replaceSubstitutions(\"{{$randomPhoneNumber}}\").replace(/-/g,'');",
                "pm.collectionVariables.set(\"email\", email);",
                "pm.collectionVariables.set(\"new_email\", newEmail);",
                "pm.collectionVariables.set(\"password\", pass);",
                "pm.collectionVariables.set(\"name\", name);",
                "pm.collectionVariables.set(\"phone\", phone);",
                "console.log(email, newEmail, pass, phone);",
                "console.log(name );"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "73c92330-9c81-4526-a720-242a647bd1fa",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"{{name}}\",\"email\":\"{{email}}\",\"number\":\"{{phone}}\",\"password\":\"{{password}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/signup",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "signup"
            ]
          }
        },
        "response": [],
        "uid": "13872198-73c92330-9c81-4526-a720-242a647bd1fa"
      },
      {
        "name": "Login",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.collectionVariables.set(\"token\", jsonData.token);",
                "    var token = pm.collectionVariables.get(\"token\");",
                "    pm.test(\"Token is set\", function () {",
                "        pm.expect(jsonData.token).to.eql(token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript",
              "id": "fc0cb347-ad16-46de-9985-207c5146d7c5"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});\r",
                ""
              ],
              "type": "text/javascript",
              "id": "c0a43741-3b36-48c0-be1a-9e5595f57c11"
            }
          }
        ],
        "id": "5f9c7b75-681c-43aa-9d80-448f7907669c",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"{{email}}\",\"password\":\"{{password}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/login",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "login"
            ]
          }
        },
        "response": [],
        "uid": "13872198-5f9c7b75-681c-43aa-9d80-448f7907669c"
      },
      {
        "name": "Verify JWT Token",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript",
              "id": "ed5c1a2a-44dd-4cd7-8adc-d094cd7fdae8"
            }
          }
        ],
        "id": "c4ffff4d-e81c-405d-a8c0-caf9299b8020",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n    \"token\": \"{{token}}\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/verify",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "verify"
            ]
          }
        },
        "response": [],
        "uid": "13872198-c4ffff4d-e81c-405d-a8c0-caf9299b8020"
      },
      {
        "name": "Forgot Password",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.test(\"Body matches string\", function () {",
                "        pm.expect(pm.response.text()).to.include(\"OTP Sent\");",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript",
              "id": "01bbbbc5-87cd-4337-af44-5a9433e4bf1c"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript",
              "id": "902385be-d824-4990-8e17-022fe8a0313f"
            }
          }
        ],
        "id": "fff7f353-9fbc-457f-97c1-42b7fa4b1024",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"{{email}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/forget-password",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "forget-password"
            ]
          }
        },
        "response": [],
        "uid": "13872198-fff7f353-9fbc-457f-97c1-42b7fa4b1024"
      },
      {
        "name": "SearchMailOTP",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "",
                "",
                "function dynamicSort(property) {",
                "    var sortOrder = 1;",
                "    if(property[0] === \"-\") {",
                "        sortOrder = -1;",
                "        property = property.substr(1);",
                "    }",
                "    return function (a,b) {",
                "        /* next line works with strings and numbers, ",
                "         * and you may want to customize it to your needs",
                "         */",
                "        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;",
                "        return result * sortOrder;",
                "    }",
                "}",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var mails = jsonData.items;",
                "",
                "    pm.test(\"Your test name\", function () {",
                "        pm.expect(mails.length).to.be.gt(0);",
                "        var mail = mails[0];",
                "        console.log(mail);",
                "        //mails.sort(dynamicSort(\"Created\"));",
                "        var mail = mails[0];",
                "        var mbody = mail['Raw']['Data'].replace(/[^a-zA-Z0-9<>:]*\\n/g, \"\");",
                "        console.log(mail);",
                "        var otpmatch = mbody.match(/generated otp is: ([0-9]+)/);",
                "        console.log(otpmatch);",
                "        var otp = otpmatch[1]",
                "        console.log(\"OTP: \"+ otp);",
                "        pm.collectionVariables.set(\"OTP\", otp);",
                "    });",
                "    ",
                "});",
                ""
              ],
              "type": "text/javascript",
              "id": "eed6b360-55c8-43f2-ad6a-4f8e1e8a1da3"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript",
              "id": "42443fb8-3a72-4d37-ab36-597308aff3d2"
            }
          }
        ],
        "id": "437e1354-581b-4a26-94a8-1ff508ac8420",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url_mail}}/api/v2/search?kind=to&query={{email}}&limit=10",
            "host": [
              "{{url_mail}}"
            ],
            "path": [
              "api",
              "v2",
              "search"
            ],
            "query": [
              {
                "key": "kind",
                "value": "to"
              },
              {
                "key": "query",
                "value": "{{email}}"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-437e1354-581b-4a26-94a8-1ff508ac8420"
      },
      {
        "name": "Check OTP",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                ""
              ],
              "type": "text/javascript",
              "id": "a8af689c-e601-43b1-bb64-0b8224908bce"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript",
              "id": "ba8abbec-945d-48f3-9f9a-d407cfbc2571"
            }
          }
        ],
        "id": "a45abeb7-f6c3-405d-bd01-3c79786d321b",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"{{email}}\",\n    \"otp\": \"{{OTP}}\",\n    \"password\": \"{{password}}\"\n}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/v3/check-otp",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "v3",
              "check-otp"
            ]
          }
        },
        "response": [],
        "uid": "13872198-a45abeb7-f6c3-405d-bd01-3c79786d321b"
      },
      {
        "name": "Resend vehicle email",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9c1dc5cd-e1d6-4c3b-8bfd-52ae448c4595",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "3eebacdf-ed5a-43f7-9ed5-fce2bd2447ce",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "598598c0-9905-4291-beef-3199c4a80ef7",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/vehicle/resend_email",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "vehicle",
              "resend_email"
            ]
          }
        },
        "response": [],
        "uid": "13872198-598598c0-9905-4291-beef-3199c4a80ef7"
      },
      {
        "name": "SearchMailVehicle",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "",
                "function dynamicSort(property) {",
                "    var sortOrder = 1;",
                "    if(property[0] === \"-\") {",
                "        sortOrder = -1;",
                "        property = property.substr(1);",
                "    }",
                "    return function (a,b) {",
                "        /* next line works with strings and numbers, ",
                "         * and you may want to customize it to your needs",
                "         */",
                "        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;",
                "        return result * sortOrder;",
                "    }",
                "}",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var mails = jsonData.items;",
                "",
                "    pm.test(\"Your test name\", function () {",
                "        pm.expect(mails.length).to.be.gt(0);",
                "        console.log(mails[0]);",
                "        //mails.sort(dynamicSort(\"Created\"));",
                "        console.log(mails[0]);",
                "        var mail = mails[0];",
                "        var mbody = mail['Raw']['Data'].replace(/[^a-zA-Z0-9<>:]*\\n/g, \"\");",
                "        var vintext = mbody.match(/VIN(.*)Pincode/i);",
                "        console.log(vintext);",
                "        var VIN = vintext[1].match(/>([A-Za-z0-9]+)</)[1];",
                "        console.log(\"VIN: \" + VIN);",
                "        var pintext = mbody.match(/Pincode(.*)We're/);",
                "        console.log(pintext);",
                "        var PIN = pintext[1].match(/>([0-9]+)</)[1];",
                "        console.log(\"PIN: \"+ PIN);",
                "        pm.collectionVariables.set(\"VIN\", VIN);",
                "        pm.collectionVariables.set(\"PIN\", PIN);",
                "    });",
                "    ",
                "});",
                ""
              ],
              "type": "text/javascript",
              "id": "e4b022af-785b-4fe5-b6ef-65ec4ea8d7a1"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript",
              "id": "70271721-08c8-41f9-a5a4-f3b83093dad4"
            }
          }
        ],
        "id": "c0ef62ef-8ca0-4eaf-a3d8-44c1aa41a407",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url_mail}}/api/v2/search?kind=to&query={{email}}&limit=10",
            "host": [
              "{{url_mail}}"
            ],
            "path": [
              "api",
              "v2",
              "search"
            ],
            "query": [
              {
                "key": "kind",
                "value": "to"
              },
              {
                "key": "query",
                "value": "{{email}}"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-c0ef62ef-8ca0-4eaf-a3d8-44c1aa41a407"
      },
      {
        "name": "Add Vehicle from Mail",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "aeb0161e-8372-4da8-b151-1ab732099cf8",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "aa6ed8be-83b9-4071-9c2e-ad35c08050f7",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "557cbaea-7709-4da6-8f18-36d05a49f3c5",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"vin\": \"{{VIN}}\", \"pincode\": \"{{PIN}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/vehicle/add_vehicle",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "vehicle",
              "add_vehicle"
            ]
          }
        },
        "response": [],
        "uid": "13872198-557cbaea-7709-4da6-8f18-36d05a49f3c5"
      },
      {
        "name": "Get Dashboard",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "94c6588b-1056-4828-8c7f-309bdd80a557",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "15ed7adb-1256-4039-9d7a-2c81d5b9a764",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "51aeab4f-44d3-44f4-a68f-8ca534c76eb2",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/user/dashboard",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "dashboard"
            ]
          }
        },
        "response": [],
        "uid": "13872198-51aeab4f-44d3-44f4-a68f-8ca534c76eb2"
      },
      {
        "name": "Get vehicles",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "94c6588b-1056-4828-8c7f-309bdd80a557",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = pm.response.json();",
                "    pm.collectionVariables.set(\"vehicle_id\", jsonData[0].uuid);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "15ed7adb-1256-4039-9d7a-2c81d5b9a764",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "071e3d09-178d-4119-a4d2-cad20b48bbb5",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/vehicle/vehicles",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "vehicle",
              "vehicles"
            ]
          }
        },
        "response": [],
        "uid": "13872198-071e3d09-178d-4119-a4d2-cad20b48bbb5"
      },
      {
        "name": "Get recent posts",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "38fb751f-d2f2-4868-9c73-fc603acfe23f",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "9b6b4be9-5cf3-460a-a34a-e92899854e58",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "3672b547-3a8f-4d57-aad2-3e180d7fa47c",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/community/api/v2/community/posts/recent?limit=30&offset=0",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "community",
              "posts",
              "recent"
            ],
            "query": [
              {
                "key": "limit",
                "value": "30"
              },
              {
                "key": "offset",
                "value": "0"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-3672b547-3a8f-4d57-aad2-3e180d7fa47c"
      },
      {
        "name": "Create post ",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b5458d72-88ae-423b-8ae2-46a26842fe38",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var order = jsonData.id;",
                "    pm.collectionVariables.set(\"post_id\", order);",
                "    console.log(order);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "f2aa7cd1-923a-4608-81fd-131c19e5c42b",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "36850ebe-8a64-42b2-aeff-d5a36d0005d9",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"title\":\"{{$randomLoremSentence}}\",\"content\":\"{{$randomLoremParagraph}}\"}"
          },
          "url": {
            "raw": "{{url}}/community/api/v2/community/posts",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "community",
              "posts"
            ]
          }
        },
        "response": [],
        "uid": "13872198-36850ebe-8a64-42b2-aeff-d5a36d0005d9"
      },
      {
        "name": "Get post",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "49844a45-d740-4e48-b00b-bc89ffc12556",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    ",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2656982e-1f5a-4812-ba13-84539e8d5cd4",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "6a434301-adbb-41ed-a2d9-b1599aac7dcc",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/community/api/v2/community/posts/{{post_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "community",
              "posts",
              "{{post_id}}"
            ]
          }
        },
        "response": [],
        "uid": "13872198-6a434301-adbb-41ed-a2d9-b1599aac7dcc"
      },
      {
        "name": "Post comment",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4ed7e169-9c0a-4b2f-9900-931fde9cc253",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7f7a041c-4686-497f-af7c-69d182486153",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "f4da30f3-5f68-457e-9f52-57e744d638a0",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"content\":\"{{$randomLoremSentence}}\"}"
          },
          "url": {
            "raw": "{{url}}/community/api/v2/community/posts/{{post_id}}/comment",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "community",
              "posts",
              "{{post_id}}",
              "comment"
            ]
          },
          "description": "Post comment"
        },
        "response": [],
        "uid": "13872198-f4da30f3-5f68-457e-9f52-57e744d638a0"
      },
      {
        "name": "Get vehicle location",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1d1f1d9e-34e2-462a-8469-f3a48bfce052",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "f13d8ca4-39d1-4003-bf2e-8d31f3b4a178",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "7fe2e5da-ca18-46c5-b802-eb777841d76c",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/vehicle/{{vehicle_id}}/location",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "vehicle",
              "{{vehicle_id}}",
              "location"
            ]
          }
        },
        "response": [],
        "uid": "13872198-7fe2e5da-ca18-46c5-b802-eb777841d76c"
      },
      {
        "name": "Get All Mechanics",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1d1f1d9e-34e2-462a-8469-f3a48bfce052",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "f13d8ca4-39d1-4003-bf2e-8d31f3b4a178",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "76ff951b-e220-4784-a97b-8bf29a63b58f",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/workshop/api/mechanic",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "mechanic"
            ]
          }
        },
        "response": [],
        "uid": "13872198-76ff951b-e220-4784-a97b-8bf29a63b58f"
      },
      {
        "name": "Contact mechanic",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f0f39752-0671-4381-8df8-9cbe570e6925",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = pm.response.json();",
                "    pm.collectionVariables.set(\"report_id\", jsonData.response_from_mechanic_api.id);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "d470cb7e-2d7a-45e8-b610-da6a0d820882",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "66c46dc2-2386-44cf-890a-63d917d2ca23",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtb25zdGVyQGRhcmt3ZWIuY29tIiwiaWF0IjoxNjA4NTQzODI0LCJleHAiOjE2MDg2MzAyMjR9.AAIvhrtstlloPf7-NNCcmhEZm-XkO1aO3x3CLns1em7ft9U77B88LpK9jIrF8C-IH32JPWVazRFo0gBIBZ9FpA"
            },
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"mechanic_code\": \"TRAC_JHN\",\r\n    \"problem_details\": \"Hi Jhon\",\r\n    \"vin\": \"{{VIN}}\",\r\n    \"mechanic_api\": \"{{url}}/workshop/api/mechanic/receive_report\",\r\n    \"repeat_request_if_failed\": false,\r\n    \"number_of_repeats\": 1\r\n}"
          },
          "url": {
            "raw": "{{url}}/workshop/api/merchant/contact_mechanic",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "merchant",
              "contact_mechanic"
            ]
          }
        },
        "response": [],
        "uid": "13872198-66c46dc2-2386-44cf-890a-63d917d2ca23"
      },
      {
        "name": "Mechanic Login",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ecefadd8-d1fb-4415-a0b2-cfcae8216ac6",
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.collectionVariables.set(\"mechanicToken\", jsonData.token);",
                "    var token = pm.collectionVariables.get(\"mechanicToken\");",
                "    pm.test(\"Token is set\", function () {",
                "        pm.expect(jsonData.token).to.eql(token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "96148952-7c1a-4316-8577-b7b0cc59fdb4",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "pm.collectionVariables.set(\"X-Forwarded-For-Admin\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "0eeb2452-e86b-48f3-bf4f-082703f39884",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"jhon@example.com\",\"password\":\"Admin1@#\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/login",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "login"
            ]
          }
        },
        "response": [],
        "uid": "13872198-0eeb2452-e86b-48f3-bf4f-082703f39884"
      },
      {
        "name": "Service Requests",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f0f39752-0671-4381-8df8-9cbe570e6925",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "d470cb7e-2d7a-45e8-b610-da6a0d820882",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "dc6c5d9a-9cd1-493e-9226-41cb0d50b3a1",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{mechanicToken}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtb25zdGVyQGRhcmt3ZWIuY29tIiwiaWF0IjoxNjA4NTQzODI0LCJleHAiOjE2MDg2MzAyMjR9.AAIvhrtstlloPf7-NNCcmhEZm-XkO1aO3x3CLns1em7ft9U77B88LpK9jIrF8C-IH32JPWVazRFo0gBIBZ9FpA"
            },
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url}}/workshop/api/mechanic/service_requests?limit=30&offset=0",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "mechanic",
              "service_requests"
            ],
            "query": [
              {
                "key": "limit",
                "value": "30"
              },
              {
                "key": "offset",
                "value": "0"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-dc6c5d9a-9cd1-493e-9226-41cb0d50b3a1"
      },
      {
        "name": "GetReport",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4f6d9666-0933-4e5c-a4a1-efdd2e2c49aa",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "b30d69f4-b8cc-4e58-9acc-fe49d38a8a89",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "a992c051-2e26-42f6-8aba-52005b766363",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtb25zdGVyQGRhcmt3ZWIuY29tIiwiaWF0IjoxNjA4NTQzODI0LCJleHAiOjE2MDg2MzAyMjR9.AAIvhrtstlloPf7-NNCcmhEZm-XkO1aO3x3CLns1em7ft9U77B88LpK9jIrF8C-IH32JPWVazRFo0gBIBZ9FpA"
            },
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url}}/workshop/api/mechanic/mechanic_report?report_id={{report_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "mechanic",
              "mechanic_report"
            ],
            "query": [
              {
                "key": "report_id",
                "value": "{{report_id}}"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-a992c051-2e26-42f6-8aba-52005b766363"
      },
      {
        "name": "Get products",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f58f20f7-878b-4ffa-b17a-835c779b561a",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = pm.response.json();",
                "    var productId = jsonData.products[0].id;",
                "    pm.collectionVariables.set(\"product_id\", productId);",
                "    console.log(\"Product ID \", productId);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "200fbc66-8abc-4d88-8d38-787ee390c27a",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "f76df6ed-a560-4517-ae32-9bf7d7518896",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/workshop/api/shop/products",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "products"
            ]
          }
        },
        "response": [],
        "uid": "13872198-f76df6ed-a560-4517-ae32-9bf7d7518896"
      },
      {
        "name": "Validate coupon",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6c7102fd-abfd-44a1-bd70-aaf2d46ee7f1",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "785896e4-8b48-4cec-957d-4b27ea74d5c3",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "443e66e0-34b9-4804-b761-bd62e7cc4288",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtb25zdGVyQGRhcmt3ZWIuY29tIiwiaWF0IjoxNjA4MDMxMDk5LCJleHAiOjE2MDgxMTc0OTl9.lQr14VeNm_lOmKiOIKwO6mRu_47VEU8HVWEsyBzbeaVXzIthwnTC4mNmYb0qNW2--T20_P9sOjTWtMJjKRQCJA"
            },
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"coupon_code\":\"TRAC075\"}"
          },
          "url": {
            "raw": "{{url}}/community/api/v2/coupon/validate-coupon",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "coupon",
              "validate-coupon"
            ]
          }
        },
        "response": [],
        "uid": "13872198-443e66e0-34b9-4804-b761-bd62e7cc4288"
      },
      {
        "name": "Apply coupon",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51f8310b-533a-4f39-b7bc-c1da9906ae6f",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "b3bd0f55-5f8c-4ea6-bca3-94993a1d1804",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"coupon_code\":\"TRAC075\",\"amount\":65}"
          },
          "url": {
            "raw": "{{url}}/workshop/api/shop/apply_coupon",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "apply_coupon"
            ]
          }
        },
        "response": [],
        "uid": "13872198-b3bd0f55-5f8c-4ea6-bca3-94993a1d1804"
      },
      {
        "name": "Create Order",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6a143464-3847-43eb-bed4-89cec5a83a72",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var order = jsonData.id;",
                "    pm.collectionVariables.set(\"order_id\", order);",
                "    console.log(order);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "71cce0c9-d934-4353-be0f-47a19817003e",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "776bef3d-b912-4847-a268-2e452f9b238b",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"product_id\":{{product_id}},\"quantity\":1}"
          },
          "url": {
            "raw": "{{url}}/workshop/api/shop/orders",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "orders"
            ]
          }
        },
        "response": [],
        "uid": "13872198-776bef3d-b912-4847-a268-2e452f9b238b"
      },
      {
        "name": "Get orders",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "67a60d41-74e2-4d55-90bb-9434ed930515",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "8737b250-4b38-4cd9-8da4-549bc83fcd8e",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "d8b2a762-c4ab-460d-91a9-c1f666897cb0",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/workshop/api/shop/orders/all",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "orders",
              "all"
            ]
          }
        },
        "response": [],
        "uid": "13872198-d8b2a762-c4ab-460d-91a9-c1f666897cb0"
      },
      {
        "name": "Get Order",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "63c33dcb-8e01-49e8-b76f-dc552707b126",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ee8efbbf-d317-4a0a-b6c2-9af346d11dfd",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "a42bff0b-3401-410e-855b-6fcff08178e1",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/workshop/api/shop/orders/{{order_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "orders",
              "{{order_id}}"
            ]
          }
        },
        "response": [],
        "uid": "13872198-a42bff0b-3401-410e-855b-6fcff08178e1"
      },
      {
        "name": "Return order",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "95bf82ce-48af-4157-a4aa-8e11dcb386ef",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "e2c85c92-3844-459d-8355-4e182b9786ba",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "9bb458ba-48cf-4dab-b9f3-4b9789095b72",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/workshop/api/shop/orders/return_order?order_id={{order_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "orders",
              "return_order"
            ],
            "query": [
              {
                "key": "order_id",
                "value": "{{order_id}}"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-9bb458ba-48cf-4dab-b9f3-4b9789095b72"
      },
      {
        "name": "Add video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f25025f1-7dd9-4ff2-b1df-90c34e74915f",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var video_id = jsonData.id;",
                "    pm.collectionVariables.set(\"video_id\", video_id);",
                "    console.log(video_id);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ca302a6a-c9b1-44c1-9ecc-66744ee10ba7",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "7bba9029-97f6-458e-9b7a-65edcd364ef8",
        "protocolProfileBehavior": {
          "disabledSystemHeaders": {
            "content-type": true
          },
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file\"; filename=\"abc.mp4\"\r\nContent-Type: video/mp4\r\n\r\nhakfhas\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos"
            ]
          }
        },
        "response": [],
        "uid": "13872198-7bba9029-97f6-458e-9b7a-65edcd364ef8"
      },
      {
        "name": "Get Video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9610a1b1-fd62-4e42-9779-8c1cecb8b100",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "bc84846a-b858-49e9-b081-77b7c810596e",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "e5d8f95f-404d-45f5-8df0-b524a2d9dece",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos/{{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos",
              "{{video_id}}"
            ]
          }
        },
        "response": [],
        "uid": "13872198-e5d8f95f-404d-45f5-8df0-b524a2d9dece"
      },
      {
        "name": "Change Video Name",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "529e0248-a28e-49bc-aafc-d31d0701aa90",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7b194f02-d120-4d6a-b38e-1faf7606e8c0",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "66ef9d3e-6d22-4a6f-b2f2-73aec8c5f4cc",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "PUT",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"videoName\":\"{{$randomNoun}}.mp4\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos/{{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos",
              "{{video_id}}"
            ]
          }
        },
        "response": [],
        "uid": "13872198-66ef9d3e-6d22-4a6f-b2f2-73aec8c5f4cc"
      },
      {
        "name": "Share video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6d7b66b9-ee50-4b0b-b529-742a494211eb",
              "exec": [
                "pm.test(\"Status code is 403\", function () {",
                "    pm.response.to.have.status(403);",
                "    pm.expect(pm.response.text()).to.include(\"S-hould be accessed only inte-Rnally\");",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "b91969ad-e768-40fd-b3e4-8bb525f5061f",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "d74fc742-a4aa-4a80-b52a-f528d72164cb",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos/convert_video?video_id={{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos",
              "convert_video"
            ],
            "query": [
              {
                "key": "video_id",
                "value": "{{video_id}}"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-d74fc742-a4aa-4a80-b52a-f528d72164cb"
      },
      {
        "name": "Get user dashboard",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "01630281-abcf-4238-b4a2-e38d2fec16c8",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "c7d793e8-e008-4199-ba9a-6e47ac54746c",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "1482944a-48e9-4cb0-8bb8-35914843b76f",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/user/dashboard",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "dashboard"
            ]
          }
        },
        "response": [],
        "uid": "13872198-1482944a-48e9-4cb0-8bb8-35914843b76f"
      },
      {
        "name": "Add new video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f25d8fc0-edb3-48f3-9721-0ac92825c681",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var video_id = jsonData.id;",
                "    pm.collectionVariables.set(\"video_id\", video_id);",
                "    console.log(video_id);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "3510de26-4ffe-4a20-b77c-55b8c441a185",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "e19ac072-9f09-4564-b23e-94729143cf78",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file\"; filename=\"abc.mp4\"\r\nContent-Type: video/mp4\r\n\r\nhakfhas\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos"
            ]
          }
        },
        "response": [],
        "uid": "13872198-e19ac072-9f09-4564-b23e-94729143cf78"
      },
      {
        "name": "Delete video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4569b343-c5be-4b72-9a94-f409dd6ce7bb",
              "exec": [
                "pm.test(\"Status code is 403\", function () {",
                "    pm.response.to.have.status(404);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "4670b368-098a-4935-b67a-ab518d0e78ce",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "68c9d559-1009-4a99-bdf8-7376ae05f0f2",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "DELETE",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos/{{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos",
              "{{video_id}}"
            ]
          }
        },
        "response": [],
        "uid": "13872198-68c9d559-1009-4a99-bdf8-7376ae05f0f2"
      },
      {
        "name": "Admin Login",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.collectionVariables.set(\"adminToken\", jsonData.token);",
                "    var token = pm.collectionVariables.get(\"adminToken\");",
                "    pm.test(\"Token is set\", function () {",
                "        pm.expect(jsonData.token).to.eql(token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript",
              "id": "ecefadd8-d1fb-4415-a0b2-cfcae8216ac6"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "pm.collectionVariables.set(\"X-Forwarded-For-Admin\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript",
              "id": "96148952-7c1a-4316-8577-b7b0cc59fdb4"
            }
          }
        ],
        "id": "29cdda38-7bdf-471c-9a17-9217e4749ce2",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"admin@example.com\",\"password\":\"Admin!123\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/login",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "login"
            ]
          }
        },
        "response": [],
        "uid": "13872198-29cdda38-7bdf-471c-9a17-9217e4749ce2"
      },
      {
        "name": "Add Product",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f58f20f7-878b-4ffa-b17a-835c779b561a",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = pm.response.json();",
                "    var productId = jsonData.id;",
                "    pm.collectionVariables.set(\"product_id\", productId);",
                "    console.log(\"Product ID \", productId);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "200fbc66-8abc-4d88-8d38-787ee390c27a",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "c9414a2a-aac8-4db6-be4d-b501931922d7",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{adminToken}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"NewSeat\",\n    \"price\": 100,\n    \"image_url\": \"images/seat.svg\"\n}"
          },
          "url": {
            "raw": "{{url}}/workshop/api/shop/products",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "products"
            ]
          }
        },
        "response": [],
        "uid": "13872198-c9414a2a-aac8-4db6-be4d-b501931922d7"
      },
      {
        "name": "Delete video by admin",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript",
              "id": "7ec00694-305a-425c-a234-38349add316d"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For-Admin');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For-Admin\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript",
              "id": "20b3646f-e7ed-47c8-9aa0-d0ac7428f675"
            }
          }
        ],
        "id": "62277a20-07b8-4954-8188-e41729cf4f39",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{adminToken}}",
                "type": "string"
              }
            ]
          },
          "method": "DELETE",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/admin/videos/{{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "admin",
              "videos",
              "{{video_id}}"
            ]
          }
        },
        "response": [],
        "uid": "13872198-62277a20-07b8-4954-8188-e41729cf4f39"
      },
      {
        "name": "ReAdd new video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "77752d0e-50d9-4a7f-bf6c-80dabacd5563",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var video_id = jsonData.id;",
                "    pm.collectionVariables.set(\"video_id\", video_id);",
                "    console.log(video_id);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7e0b3d53-0e0e-4d88-829c-541c5ecdae2b",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "0eaef3a1-e5b8-4756-bbe7-1eaefa4173d8",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file\"; filename=\"abc.mp4\"\r\nContent-Type: video/mp4\r\n\r\nhakfhas\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos"
            ]
          }
        },
        "response": [],
        "uid": "13872198-0eaef3a1-e5b8-4756-bbe7-1eaefa4173d8"
      },
      {
        "name": "Get Workshop User Details",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "77752d0e-50d9-4a7f-bf6c-80dabacd5563",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var video_id = jsonData.id;",
                "    pm.collectionVariables.set(\"video_id\", video_id);",
                "    console.log(video_id);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7e0b3d53-0e0e-4d88-829c-541c5ecdae2b",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "b5d507ef-ece1-4b81-b3ab-67d14f15e56c",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{adminToken}}",
                "type": "string"
              }
            ]
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file\"; filename=\"abc.mp4\"\r\nContent-Type: video/mp4\r\n\r\nhakfhas\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"
          },
          "url": {
            "raw": "{{url}}/workshop/api/management/users/all?limit=30&offset=0",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "management",
              "users",
              "all"
            ],
            "query": [
              {
                "key": "limit",
                "value": "30"
              },
              {
                "key": "offset",
                "value": "0"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-b5d507ef-ece1-4b81-b3ab-67d14f15e56c"
      },
      {
        "name": "Change email",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "38a418ce-9e8e-4ceb-9ad5-ee89ee0af464",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "21130742-f16a-44cd-ac8b-190d25fcdf54",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "14fa4db8-ea42-40ff-ae75-cb9b1c6f5f78",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"old_email\":\"{{email}}\",\"new_email\":\"{{new_email}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/change-email",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "change-email"
            ]
          }
        },
        "response": [],
        "uid": "13872198-14fa4db8-ea42-40ff-ae75-cb9b1c6f5f78"
      },
      {
        "name": "SearchMailVerificationToken",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "",
                "",
                "function dynamicSort(property) {",
                "    var sortOrder = 1;",
                "    if(property[0] === \"-\") {",
                "        sortOrder = -1;",
                "        property = property.substr(1);",
                "    }",
                "    return function (a,b) {",
                "        /* next line works with strings and numbers, ",
                "         * and you may want to customize it to your needs",
                "         */",
                "        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;",
                "        return result * sortOrder;",
                "    }",
                "}",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var mails = jsonData.items;",
                "",
                "    pm.test(\"Get Token\", function () {",
                "        pm.expect(mails.length).to.be.gt(0);",
                "        //mails.sort(dynamicSort(\"Created\"));",
                "        var mail = mails[0];",
                "        var mbody = mail['Raw']['Data'].replace(/[^a-zA-Z0-9<>:]*\\n/g, \"\");",
                "        console.log(mbody);",
                "        var tokentext = mbody.match(/token:\\s*[^\\s]+/i);",
                "        console.log(tokentext);",
                "        var email_token = tokentext[0].match(/>([A-Za-z0-9]+)</)[1];",
                "        console.log(\"Token: \" + email_token);",
                "        pm.collectionVariables.set(\"email_token\", email_token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript",
              "id": "e7a12935-7dcc-4524-a0ca-47500df1041d"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript",
              "id": "8104da9e-1e65-4741-957c-1b60715198d3"
            }
          }
        ],
        "id": "9bdb45a6-0cbc-416b-813b-c63513a9fb78",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url_mail}}/api/v2/search?kind=to&query={{new_email}}&limit=10",
            "host": [
              "{{url_mail}}"
            ],
            "path": [
              "api",
              "v2",
              "search"
            ],
            "query": [
              {
                "key": "kind",
                "value": "to"
              },
              {
                "key": "query",
                "value": "{{new_email}}"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-9bdb45a6-0cbc-416b-813b-c63513a9fb78"
      },
      {
        "name": "Verify email token",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9bd693bc-3f61-4b0e-a1de-fbb852f1bc1b",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "20995566-89c9-424f-a135-8035330f6f22",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "a2543f67-c10e-450e-8f43-1ce3bff4a5e4",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"old_email\": \"{{email}}\", \"new_email\":\"{{new_email}}\",\"token\":\"{{email_token}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/verify-email-token",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "verify-email-token"
            ]
          }
        },
        "response": [],
        "uid": "13872198-a2543f67-c10e-450e-8f43-1ce3bff4a5e4"
      },
      {
        "name": "Login Back",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.collectionVariables.set(\"token\", jsonData.token);",
                "    var token = pm.collectionVariables.get(\"token\");",
                "    pm.test(\"Token is set\", function () {",
                "        pm.expect(jsonData.token).to.eql(token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript",
              "id": "f63d459c-2004-4718-9d85-cfabe679c33f"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript",
              "id": "113f6e16-a21c-4cfb-9c8e-da3dff482826"
            }
          }
        ],
        "id": "1db55c21-1d59-4477-98d9-fe5640fff62c",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"{{new_email}}\",\"password\":\"{{password}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/login",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "login"
            ]
          }
        },
        "response": [],
        "uid": "13872198-1db55c21-1d59-4477-98d9-fe5640fff62c"
      },
      {
        "name": "Change email Back",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c848598b-7d28-4806-8ad5-0d7e20a9d950",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "3ff5d22f-d710-4ed7-afa4-d115e85ea824",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "e09f649c-7215-4aca-9b50-1b1acb8c7f95",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"old_email\":\"{{new_email}}\",\"new_email\":\"{{email}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/change-email",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "change-email"
            ]
          }
        },
        "response": [],
        "uid": "13872198-e09f649c-7215-4aca-9b50-1b1acb8c7f95"
      },
      {
        "name": "SearchMailVerificationToken Back",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "77bac1af-c8c4-4989-b04c-1e351c8fd482",
              "exec": [
                "",
                "function dynamicSort(property) {",
                "    var sortOrder = 1;",
                "    if(property[0] === \"-\") {",
                "        sortOrder = -1;",
                "        property = property.substr(1);",
                "    }",
                "    return function (a,b) {",
                "        /* next line works with strings and numbers, ",
                "         * and you may want to customize it to your needs",
                "         */",
                "        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;",
                "        return result * sortOrder;",
                "    }",
                "}",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var mails = jsonData.items;",
                "",
                "    pm.test(\"Get Token\", function () {",
                "        pm.expect(mails.length).to.be.gt(0);",
                "        //mails.sort(dynamicSort(\"Created\"));",
                "        var mail = mails[0];",
                "        var mbody = mail['Raw']['Data'].replace(/[^a-zA-Z0-9<>:]*\\n/g, \"\");",
                "        console.log(mbody);",
                "        var tokentext = mbody.match(/token:\\s*[^\\s]+/i);",
                "        console.log(tokentext);",
                "        var email_token = tokentext[0].match(/>([A-Za-z0-9]+)</)[1];",
                "        console.log(\"Token: \" + email_token);",
                "        pm.collectionVariables.set(\"email_token\", email_token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "b2332f48-9202-415b-baa4-43e43d9ecd55",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "d4e9595d-f33f-4548-bae5-b852749ad857",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url_mail}}/api/v2/search?kind=to&query={{email}}",
            "host": [
              "{{url_mail}}"
            ],
            "path": [
              "api",
              "v2",
              "search"
            ],
            "query": [
              {
                "key": "kind",
                "value": "to"
              },
              {
                "key": "query",
                "value": "{{email}}"
              }
            ]
          }
        },
        "response": [],
        "uid": "13872198-d4e9595d-f33f-4548-bae5-b852749ad857"
      },
      {
        "name": "Verify email token Back",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "71747391-89fb-4364-bd0b-aea2c2d8a71e",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "3f45fffa-8639-49d8-be61-203d91dd3e6b",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "4c8b0ba7-01f8-4070-9f0c-11c187878ca7",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{token}}",
                "type": "string"
              }
            ]
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"old_email\": \"{{new_email}}\", \"new_email\":\"{{email}}\",\"token\":\"{{email_token}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/verify-email-token",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "verify-email-token"
            ]
          }
        },
        "response": [],
        "uid": "13872198-4c8b0ba7-01f8-4070-9f0c-11c187878ca7"
      },
      {
        "name": "Login",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.collectionVariables.set(\"token\", jsonData.token);",
                "    var token = pm.collectionVariables.get(\"token\");",
                "    pm.test(\"Token is set\", function () {",
                "        pm.expect(jsonData.token).to.eql(token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript",
              "id": "d00789ea-c0b8-4df0-bb89-dd64aa184034"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript",
              "id": "5db56e2d-beea-4c35-ad5c-0821e4827c89"
            }
          }
        ],
        "id": "2814846e-5762-42e8-adef-a47c76acb06c",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"{{email}}\",\"password\":\"{{password}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/login",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "login"
            ]
          }
        },
        "response": [],
        "uid": "13872198-2814846e-5762-42e8-adef-a47c76acb06c"
      },
      {
        "name": "Get Public Key",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript",
              "id": "2824bbc2-dcc8-49d3-bbf5-593d32de8651"
            }
          }
        ],
        "id": "a29f188e-0ad9-46d8-9282-473d63ab1cbb",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "GET",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{url}}/.well-known/jwks.json",
            "host": [
              "{{url}}"
            ],
            "path": [
              ".well-known",
              "jwks.json"
            ]
          }
        },
        "response": [],
        "uid": "13872198-a29f188e-0ad9-46d8-9282-473d63ab1cbb"
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "4be90437-8204-4d9d-918d-09768b990a8e",
          "type": "text/javascript",
          "exec": [
            "const {Property} = require('postman-collection');",
            "var xff = pm.collectionVariables.get('X-Forwarded-For');",
            "if (!xff){",
            "    xff = Property.replaceSubstitutions('{{$randomIP}}');",
            "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);",
            "    ",
            "}",
            "pm.collectionVariables.set(\"X-Forwarded-For\", xff);",
            "pm.request.headers.remove('X-Forwarded-For');",
            "pm.request.headers.add({ ",
            "    // These keys appears when you set a header by hand. Just for fun they are here",
            "    disabled: false,",
            "    // Your header, effectively",
            "    key: 'X-Forwarded-For', ",
            "    value: xff",
            "});"
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "86278886-cc27-487e-afcd-d3b28158991c",
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      }
    ],
    "variable": [
      {
        "key": "X-Forwarded-For",
        "value": ""
      },
      {
        "key": "X-Forwarded-For-Admin",
        "value": ""
      },
      {
        "key": "vehicle_id",
        "value": ""
      },
      {
        "key": "name",
        "value": ""
      },
      {
        "key": "new_name",
        "value": ""
      },
      {
        "key": "email",
        "value": ""
      },
      {
        "key": "new_email",
        "value": ""
      },
      {
        "key": "password",
        "value": ""
      },
      {
        "key": "phone",
        "value": ""
      },
      {
        "key": "token",
        "value": ""
      },
      {
        "key": "VIN",
        "value": ""
      },
      {
        "key": "PIN",
        "value": ""
      },
      {
        "key": "report_id",
        "value": ""
      },
      {
        "key": "product_id",
        "value": ""
      },
      {
        "key": "order_id",
        "value": ""
      },
      {
        "key": "video_id",
        "value": ""
      },
      {
        "key": "adminToken",
        "value": ""
      },
      {
        "key": "email_token",
        "value": ""
      },
      {
        "key": "OTP",
        "value": ""
      },
      {
        "key": "post_id",
        "value": ""
      },
      {
        "key": "mechanicToken",
        "value": ""
      }
    ]
  }
}
