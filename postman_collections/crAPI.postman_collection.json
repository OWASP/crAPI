{
  "collection": {
    "info": {
      "_postman_id": "11111111-1111-1111-1111-111111111111",
      "name": "crAPI Accepted",
      "description": "crAPI Training Scripts",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2023-02-15T20:57:41.000Z"
    },
    "item": [
      {
        "name": "Reset Test Users",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "exec": [
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/auth/reset-test-users",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "reset-test-users"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Signup example.com",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e857cde3-4585-4826-b7f4-c70ebb0eec03",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "4d9cddf8-786f-459f-9328-4e4d868532a7",
              "exec": [
                "const {Property} = require('postman-collection');",
                "var xff = Property.replaceSubstitutions('{{$randomIP}}');",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);",
                "pm.request.headers.remove('X-Forwarded-For');",
                "pm.request.headers.add({ ",
                "    // These keys appears when you set a header by hand. Just for fun they are here",
                "    disabled: false,",
                "    // Your header, effectively",
                "    key: 'X-Forwarded-For', ",
                "    value: xff",
                "});",
                "let name = Property.replaceSubstitutions('{{$randomFirstName}}.{{$randomLastName}}');",
                "pm.collectionVariables.set(\"name\", name);",
                "let newName = Property.replaceSubstitutions('{{$randomFirstName}}.{{$randomLastName}}');",
                "pm.collectionVariables.set(\"new_name\", newName);",
                "let email = name+\"@example.com\";",
                "let newEmail = newName+\"@example.com\";",
                "let pass = Property.replaceSubstitutions(\"{{$randomPassword}}\");",
                "let phone = Property.replaceSubstitutions(\"{{$randomPhoneNumber}}\").replace(/-/g,'');",
                "pm.collectionVariables.set(\"email\", email);",
                "pm.collectionVariables.set(\"new_email\", newEmail);",
                "pm.collectionVariables.set(\"password\", pass);",
                "pm.collectionVariables.set(\"name\", name);",
                "pm.collectionVariables.set(\"phone\", phone);",
                "console.log(email, newEmail, pass, phone);",
                "console.log(name );"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "95011fcb-1cf0-482d-95f8-6d6a64458924",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"name\":\"{{name}}\",\"email\":\"{{email}}\",\"number\":\"{{phone}}\",\"password\":\"{{password}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/signup",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "signup"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Login",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b3dabfb0-9e1e-4bb1-9036-db271ea9be42",
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.collectionVariables.set(\"token\", jsonData.token);",
                "    var token = pm.collectionVariables.get(\"token\");",
                "    pm.test(\"Token is set\", function () {",
                "        pm.expect(jsonData.token).to.eql(token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "dd734d51-fae8-4593-99ac-53b33a210333",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});\r",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "6b3b62af-9854-40b8-a774-a0aad25723b9",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"{{email}}\",\"password\":\"{{password}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/login",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "login"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Verify JWT Token",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript",
              "id": "e15ce32f-489c-4dd7-856f-302e4a0ddaca"
            }
          }
        ],
        "id": "227248d7-751c-4139-81d6-7e6bf00050ec",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n    \"token\": \"{{token}}\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/verify",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "verify"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Forgot Password",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "77220831-6b67-48f2-abce-62229adddb7a",
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.test(\"Body matches string\", function () {",
                "        pm.expect(pm.response.text()).to.include(\"OTP Sent\");",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "11239e51-1e5d-4433-a87a-f8a01f62e963",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "4561e464-0591-4acb-94cd-8e6868bb4d93",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"{{email}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/forget-password",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "forget-password"
            ]
          }
        },
        "response": []
      },
      {
        "name": "SearchMailOTP",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "bb7b2f05-7128-4f51-88bd-1f90de8c5da1",
              "exec": [
                "",
                "",
                "function dynamicSort(property) {",
                "    var sortOrder = 1;",
                "    if(property[0] === \"-\") {",
                "        sortOrder = -1;",
                "        property = property.substr(1);",
                "    }",
                "    return function (a,b) {",
                "        /* next line works with strings and numbers, ",
                "         * and you may want to customize it to your needs",
                "         */",
                "        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;",
                "        return result * sortOrder;",
                "    }",
                "}",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var mails = jsonData.items;",
                "",
                "    pm.test(\"Your test name\", function () {",
                "        pm.expect(mails.length).to.be.gt(0);",
                "        var mail = mails[0];",
                "        console.log(mail);",
                "        //mails.sort(dynamicSort(\"Created\"));",
                "        var mail = mails[0];",
                "        var mbody = mail['Raw']['Data'].replace(/[^a-zA-Z0-9<>:]*\\n/g, \"\");",
                "        console.log(mail);",
                "        var otpmatch = mbody.match(/generated otp is: ([0-9]+)/);",
                "        console.log(otpmatch);",
                "        var otp = otpmatch[1]",
                "        console.log(\"OTP: \"+ otp);",
                "        pm.globals.set(\"OTP\", otp);",
                "    });",
                "    ",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "1b1e2d29-0161-4461-b2af-d6ce6aa4bf3d",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "38501ca0-531b-42ed-a3df-6a6a869a0eaf",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url_mail}}/api/v2/search?kind=to&query={{email}}&limit=10",
            "host": [
              "{{url_mail}}"
            ],
            "path": [
              "api",
              "v2",
              "search"
            ],
            "query": [
              {
                "key": "kind",
                "value": "to"
              },
              {
                "key": "query",
                "value": "{{email}}"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Check OTP",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "03dc20b1-db94-425f-8cd6-8cef62437579",
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "5c7e05d5-f2ee-4f56-82e9-b380b3c21781",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "e93361b7-2a6a-42bb-9e9c-66c12c2cdcb6",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n    \"email\": \"{{email}}\",\n    \"otp\": \"{{OTP}}\",\n    \"password\": \"{{password}}\"\n}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/v3/check-otp",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "v3",
              "check-otp"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Resend vehicle email",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0e8904cd-5bf5-452d-9f76-c0942e0e1ddd",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2edb89b6-a1f8-452d-a3d8-44c480bd1194",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "b33396c1-6f43-405a-9d0f-2379cb1341d8",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/vehicle/resend_email",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "vehicle",
              "resend_email"
            ]
          }
        },
        "response": []
      },
      {
        "name": "SearchMailVehicle",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "04f79757-0b2e-4572-a378-9ed71916f2cf",
              "exec": [
                "",
                "function dynamicSort(property) {",
                "    var sortOrder = 1;",
                "    if(property[0] === \"-\") {",
                "        sortOrder = -1;",
                "        property = property.substr(1);",
                "    }",
                "    return function (a,b) {",
                "        /* next line works with strings and numbers, ",
                "         * and you may want to customize it to your needs",
                "         */",
                "        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;",
                "        return result * sortOrder;",
                "    }",
                "}",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var mails = jsonData.items;",
                "",
                "    pm.test(\"Your test name\", function () {",
                "        pm.expect(mails.length).to.be.gt(0);",
                "        console.log(mails[0]);",
                "        //mails.sort(dynamicSort(\"Created\"));",
                "        console.log(mails[0]);",
                "        var mail = mails[0];",
                "        var mbody = mail['Raw']['Data'].replace(/[^a-zA-Z0-9<>:]*\\n/g, \"\");",
                "        var vintext = mbody.match(/VIN(.*)Pincode/i);",
                "        console.log(vintext);",
                "        var VIN = vintext[1].match(/>([A-Za-z0-9]+)</)[1];",
                "        console.log(\"VIN: \" + VIN);",
                "        var pintext = mbody.match(/Pincode(.*)We're/);",
                "        console.log(pintext);",
                "        var PIN = pintext[1].match(/>([0-9]+)</)[1];",
                "        console.log(\"PIN: \"+ PIN);",
                "        pm.collectionVariables.set(\"VIN\", VIN);",
                "        pm.collectionVariables.set(\"PIN\", PIN);",
                "    });",
                "    ",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "44894299-8190-41f3-b38d-02637870a0ce",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "50487bec-79e0-470f-97cc-60229e96aa22",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url_mail}}/api/v2/search?kind=to&query={{email}}&limit=10",
            "host": [
              "{{url_mail}}"
            ],
            "path": [
              "api",
              "v2",
              "search"
            ],
            "query": [
              {
                "key": "kind",
                "value": "to"
              },
              {
                "key": "query",
                "value": "{{email}}"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Add Vehicle from Mail",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fdaef0e3-04c3-4de2-902b-f511a77d34de",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "c2209f89-7827-4f88-aa0a-55222576d643",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "75ca2936-1a83-41ed-b9a6-361ec77b0158",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"vin\": \"{{VIN}}\", \"pincode\": \"{{PIN}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/vehicle/add_vehicle",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "vehicle",
              "add_vehicle"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get vehicles",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "93cf51a1-5bf4-4147-b0b2-30e87faf8dd9",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = pm.response.json();",
                "    pm.collectionVariables.set(\"vehicle_id\", jsonData[0].uuid);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "d2d0e181-fe2a-4988-b879-6d59101d25bc",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "e5ceaf9c-4baa-45b5-b18e-83e8eebcf68e",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/vehicle/vehicles",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "vehicle",
              "vehicles"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get recent posts",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7cf01ed9-84bb-4848-b26c-28ca4fb3a1f2",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "05b8694a-1c5e-472a-a360-b6b5c089c8fd",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "eff155f5-d633-4b52-a3a9-493a6753068b",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/community/api/v2/community/posts/recent",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "community",
              "posts",
              "recent"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Create post ",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9f9b1e4d-c951-42eb-8858-1041141838b3",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var order = jsonData.id;",
                "    pm.globals.set(\"post_id\", order);",
                "    console.log(order);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "0e710fbf-7bf4-4756-a98d-306ff290f5bd",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "239d5ac0-6a05-43a8-bd58-4645860c30a3",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"title\":\"{{$randomLoremSentence}}\",\"content\":\"{{$randomLoremParagraph}}\"}"
          },
          "url": {
            "raw": "{{url}}/community/api/v2/community/posts",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "community",
              "posts"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get post",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6c112c0a-5544-425b-a268-edf153569c81",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    ",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "83e07b19-d6a7-47df-a8d6-30e82973b52d",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "4f2474b3-f0a1-4941-bded-afc46afec0d9",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/community/api/v2/community/posts/{{post_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "community",
              "posts",
              "{{post_id}}"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Post comment",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "206f5f46-8078-4387-b33a-61fa50d53c4d",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ec75a9d0-08d0-4296-bf9c-039b436472ef",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "4f62b2d3-9645-4062-a675-b477d8cd45f4",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"content\":\"{{$randomLoremSentence}}\"}"
          },
          "url": {
            "raw": "{{url}}/community/api/v2/community/posts/{{post_id}}/comment",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "community",
              "posts",
              "{{post_id}}",
              "comment"
            ]
          },
          "description": "Post comment"
        },
        "response": []
      },
      {
        "name": "Get vehicle location",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "073fa9a9-f836-41b9-bde5-3db6e8d75790",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "336eec10-68c0-4ae2-9504-d68d97d65212",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "d9b2f169-5409-4cb4-88bb-56c9e28d575e",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/vehicle/{{vehicle_id}}/location",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "vehicle",
              "{{vehicle_id}}",
              "location"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Contact mechanic",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ae15ee18-59d9-4171-b6f1-8d2c7fd1579a",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = pm.response.json();",
                "    pm.collectionVariables.set(\"report_id\", jsonData.response_from_mechanic_api.id);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "6b16a4ec-32b1-4c09-b052-ca2ab017f41b",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "76b2378b-1d7f-4519-a642-c45fb209e0d4",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtb25zdGVyQGRhcmt3ZWIuY29tIiwiaWF0IjoxNjA4NTQzODI0LCJleHAiOjE2MDg2MzAyMjR9.AAIvhrtstlloPf7-NNCcmhEZm-XkO1aO3x3CLns1em7ft9U77B88LpK9jIrF8C-IH32JPWVazRFo0gBIBZ9FpA"
            },
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"mechanic_code\":\"TRAC_JHN\",\"problem_details\":\"Hi Jhon\",\"vin\":\"{{VIN}}\",\"mechanic_api\":\"{{url}}/workshop/api/mechanic/receive_report\",\"repeat_request_if_failed\":false,\"number_of_repeats\":1}"
          },
          "url": {
            "raw": "{{url}}/workshop/api/merchant/contact_mechanic",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "merchant",
              "contact_mechanic"
            ]
          }
        },
        "response": []
      },
      {
        "name": "GetReport",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ae15ee18-59d9-4171-b6f1-8d2c7fd1579a",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "6b16a4ec-32b1-4c09-b052-ca2ab017f41b",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "78b2749d-ecad-435f-b257-7d185f178682",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtb25zdGVyQGRhcmt3ZWIuY29tIiwiaWF0IjoxNjA4NTQzODI0LCJleHAiOjE2MDg2MzAyMjR9.AAIvhrtstlloPf7-NNCcmhEZm-XkO1aO3x3CLns1em7ft9U77B88LpK9jIrF8C-IH32JPWVazRFo0gBIBZ9FpA"
            },
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_1_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"mechanic_code\":\"TRAC_JHN\",\"problem_details\":\"Hi Jhon\",\"vin\":\"{{VIN}}\",\"mechanic_api\":\"{{url}}/workshop/api/mechanic/receive_report\",\"repeat_request_if_failed\":false,\"number_of_repeats\":1}"
          },
          "url": {
            "raw": "{{url}}/workshop/api/mechanic/mechanic_report?report_id={{report_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "mechanic",
              "mechanic_report"
            ],
            "query": [
              {
                "key": "report_id",
                "value": "{{report_id}}"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get products",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "943760c1-3ffe-4236-903a-50b40d20d1d6",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = pm.response.json();",
                "    var productId = jsonData.products[0].id;",
                "    pm.collectionVariables.set(\"product_id\", productId);",
                "    console.log(\"Product ID \", productId);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "8c7773ce-bfbf-4c89-90cb-1e8917fa3d78",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "c18a307b-b21b-4839-8403-3645e7d5b9c5",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/workshop/api/shop/products",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "products"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Validate coupon",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1dabfe9e-bb80-4eb3-a436-7c322af4ad14",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "d43ae7a4-bf74-49e1-9099-ac44ef6a8cb3",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "59d4b28e-3469-4791-b5e8-b72ab988b173",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtb25zdGVyQGRhcmt3ZWIuY29tIiwiaWF0IjoxNjA4MDMxMDk5LCJleHAiOjE2MDgxMTc0OTl9.lQr14VeNm_lOmKiOIKwO6mRu_47VEU8HVWEsyBzbeaVXzIthwnTC4mNmYb0qNW2--T20_P9sOjTWtMJjKRQCJA"
            },
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"coupon_code\":\"TRAC075\"}"
          },
          "url": {
            "raw": "{{url}}/community/api/v2/coupon/validate-coupon",
            "host": [
              "{{url}}"
            ],
            "path": [
              "community",
              "api",
              "v2",
              "coupon",
              "validate-coupon"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Apply coupon",
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f81179f1-dede-49ec-9e87-fe68a7436dc7",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "693df9e3-9e63-4cc6-be0c-c0caeafa1eea",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"coupon_code\":\"TRAC075\",\"amount\":65}"
          },
          "url": {
            "raw": "{{url}}/workshop/api/shop/apply_coupon",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "apply_coupon"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Create Order",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "494bc4be-eb14-4d81-8d3d-e3a796024a50",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var order = jsonData.id;",
                "    pm.collectionVariables.set(\"order_id\", order);",
                "    console.log(order);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "da7db3f5-09b9-4d88-8234-10253cd014a2",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "b87d7feb-f128-4206-a8b7-d7f40815a1b0",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"product_id\":{{product_id}},\"quantity\":1}"
          },
          "url": {
            "raw": "{{url}}/workshop/api/shop/orders",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "orders"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get orders",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ec7ea74a-8799-4142-bdb7-ca74183b5455",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "332c5a36-476b-4dfc-8e3c-c3da667914a3",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "9094e2a9-d3b7-4ecb-a66d-2a87ec9ee421",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/workshop/api/shop/orders/all",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "orders",
              "all"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get Order",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fe055072-70ae-4dcf-9eeb-d762d914f5d5",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "272887d9-2467-4bbd-8b6c-c9ab22d847bb",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "3d8817d4-0952-4ac1-84c1-3db35e28655c",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/workshop/api/shop/orders/{{order_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "orders",
              "{{order_id}}"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Return order",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b23313b6-db41-4f4c-8444-f50a9ab45ce9",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "e56a6acb-682a-43e8-a6f5-c2a0a727d4fb",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "5dc85a94-3f8e-463c-9b40-66bbf9fa3f8f",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/workshop/api/shop/orders/return_order?order_id={{order_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "workshop",
              "api",
              "shop",
              "orders",
              "return_order"
            ],
            "query": [
              {
                "key": "order_id",
                "value": "{{order_id}}"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Add video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5895f73f-db45-415e-b872-f48d57468fb2",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var video_id = jsonData.id;",
                "    pm.collectionVariables.set(\"video_id\", video_id);",
                "    console.log(video_id);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "276fb107-06e0-444c-abdf-fe45a03e9c9a",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "5fd1f6c8-6615-430a-9649-d6b069a2b9e2",
        "protocolProfileBehavior": {
          "disableBodyPruning": true,
          "disabledSystemHeaders": {
            "content-type": true
          }
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file\"; filename=\"abc.mp4\"\r\nContent-Type: video/mp4\r\n\r\nhakfhas\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--",
            "options": {
              "raw": {
                "language": "text"
              }
            }
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get Video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "68aef3b9-bb21-4a31-ad68-9aadd266e719",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "db6cd700-8067-48d4-8059-3a7a7c71b2f0",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "76c10078-a6df-4c94-b1f5-e255f58c97dd",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos/{{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos",
              "{{video_id}}"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Change Video Name",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "460d5f47-867d-4c03-b5fa-48d6af29d8bb",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ae043c78-80b8-40b0-8374-34cca47a7317",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "1e741c34-e320-4a6d-9249-013b6f0eacdb",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "PUT",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"videoName\":\"{{$randomNoun}}.mp4\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos/{{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos",
              "{{video_id}}"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Share video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "cd8a41fb-9621-431b-8520-bbaf7644ca54",
              "exec": [
                "pm.test(\"Status code is 403\", function () {",
                "    pm.response.to.have.status(403);",
                "    pm.expect(pm.response.text()).to.include(\"S-hould be accessed only inte-Rnally\");",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "1567ead8-846c-446b-b788-3b0594cfcdb2",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "d465a93a-0fa5-4327-a683-9756f2e5fe32",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos/convert_video?video_id={{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos",
              "convert_video"
            ],
            "query": [
              {
                "key": "video_id",
                "value": "{{video_id}}"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get user dashboard",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "16d7908d-3cca-4e2f-9446-a9654d902984",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "9d59315a-e25d-4eb7-81db-684b043a074e",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "eff513a9-38e7-4d22-bf56-967c360f1d1b",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/user/dashboard",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "dashboard"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Add new video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5895f73f-db45-415e-b872-f48d57468fb2",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var video_id = jsonData.id;",
                "    pm.collectionVariables.set(\"video_id\", video_id);",
                "    console.log(video_id);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "276fb107-06e0-444c-abdf-fe45a03e9c9a",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "aad230d3-1318-44ca-acd7-c5a2de4d80f6",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file\"; filename=\"abc.mp4\"\r\nContent-Type: video/mp4\r\n\r\nhakfhas\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Delete video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "68aef3b9-bb21-4a31-ad68-9aadd266e719",
              "exec": [
                "pm.test(\"Status code is 403\", function () {",
                "    pm.response.to.have.status(404);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "f80b27fb-14f8-4b29-b3f1-3e7eb6407d28",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "339ba02c-b183-48f8-a2e9-f5c401de4167",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "DELETE",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos/{{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos",
              "{{video_id}}"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Admin Login",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9f78ac74-9343-43a2-93b9-08ac1e0e3495",
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.collectionVariables.set(\"adminToken\", jsonData.token);",
                "    var token = pm.collectionVariables.get(\"adminToken\");",
                "    pm.test(\"Token is set\", function () {",
                "        pm.expect(jsonData.token).to.eql(token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "08e257a1-3205-45e4-a75f-0c8f6cfe0113",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "pm.collectionVariables.set(\"X-Forwarded-For-Admin\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "7035a54a-536c-4dc7-ab8c-2b5d50af06a7",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"admin@example.com\",\"password\":\"Admin!123\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/login",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "login"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Delete video by admin",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "68aef3b9-bb21-4a31-ad68-9aadd266e719",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "b064fb58-e796-44da-8d55-460fac7f5213",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For-Admin');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For-Admin\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "b1895b03-74bc-4366-b974-88456ffc60c0",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{adminToken}}",
                "type": "string"
              }
            ]
          },
          "method": "DELETE",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "url": {
            "raw": "{{url}}/identity/api/v2/admin/videos/{{video_id}}",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "admin",
              "videos",
              "{{video_id}}"
            ]
          }
        },
        "response": []
      },
      {
        "name": "ReAdd new video",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5895f73f-db45-415e-b872-f48d57468fb2",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var video_id = jsonData.id;",
                "    pm.collectionVariables.set(\"video_id\", video_id);",
                "    console.log(video_id);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "276fb107-06e0-444c-abdf-fe45a03e9c9a",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "c65d9d61-0670-488f-9de5-4c31174d2bd2",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"file\"; filename=\"abc.mp4\"\r\nContent-Type: video/mp4\r\n\r\nhakfhas\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/videos",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "videos"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Change email",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2f5e6a1e-61b9-4f70-9358-77bb62890c36",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "596bd2dd-bbf9-40a8-a761-cdcfe43d85ec",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "c4a08b50-4d6d-4e89-9c3a-f39920170032",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"old_email\":\"{{email}}\",\"new_email\":\"{{new_email}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/change-email",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "change-email"
            ]
          }
        },
        "response": []
      },
      {
        "name": "SearchMailVerificationToken",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fe2c7752-b716-4787-89c8-95587a2ad57e",
              "exec": [
                "",
                "",
                "function dynamicSort(property) {",
                "    var sortOrder = 1;",
                "    if(property[0] === \"-\") {",
                "        sortOrder = -1;",
                "        property = property.substr(1);",
                "    }",
                "    return function (a,b) {",
                "        /* next line works with strings and numbers, ",
                "         * and you may want to customize it to your needs",
                "         */",
                "        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;",
                "        return result * sortOrder;",
                "    }",
                "}",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var mails = jsonData.items;",
                "",
                "    pm.test(\"Get Token\", function () {",
                "        pm.expect(mails.length).to.be.gt(0);",
                "        //mails.sort(dynamicSort(\"Created\"));",
                "        var mail = mails[0];",
                "        var mbody = mail['Raw']['Data'].replace(/[^a-zA-Z0-9<>:]*\\n/g, \"\");",
                "        console.log(mbody);",
                "        var tokentext = mbody.match(/token:\\s*[^\\s]+/i);",
                "        console.log(tokentext);",
                "        var email_token = tokentext[0].match(/>([A-Za-z0-9]+)</)[1];",
                "        console.log(\"Token: \" + email_token);",
                "        pm.collectionVariables.set(\"email_token\", email_token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "6c4ddaff-ff87-43fa-8acf-219a455dc3c3",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "eae8cd29-3263-45e2-8c0d-9778a2cdc2db",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url_mail}}/api/v2/search?kind=to&query={{new_email}}&limit=10",
            "host": [
              "{{url_mail}}"
            ],
            "path": [
              "api",
              "v2",
              "search"
            ],
            "query": [
              {
                "key": "kind",
                "value": "to"
              },
              {
                "key": "query",
                "value": "{{new_email}}"
              },
              {
                "key": "limit",
                "value": "10"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Verify email token",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1e128817-13c7-4d26-9094-bc5c5c8bc846",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "32c4af06-26c1-4843-b928-242193ce338f",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "07386f04-f0e8-4ffd-9312-0789534eb826",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"old_email\": \"{{email}}\", \"new_email\":\"{{new_email}}\",\"token\":\"{{email_token}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/verify-email-token",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "verify-email-token"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Login Back",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "efbd6318-e2ca-4a1c-9c7d-5f76124c039a",
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.collectionVariables.set(\"token\", jsonData.token);",
                "    var token = pm.collectionVariables.get(\"token\");",
                "    pm.test(\"Token is set\", function () {",
                "        pm.expect(jsonData.token).to.eql(token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "2c56ed4f-eb1c-4daa-ac6b-0e08ca6e3f28",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "5d58c4ba-58e5-4bb8-b811-d269bea71f8f",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"{{new_email}}\",\"password\":\"{{password}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/login",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "login"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Change email Back",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "70415a06-9323-4c41-a7e6-f969182bf66d",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "11b8f9ff-9c82-4f2f-9680-feb981b2d7f7",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "13149265-d58c-439f-be95-9919e3246bf0",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"old_email\":\"{{new_email}}\",\"new_email\":\"{{email}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/change-email",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "change-email"
            ]
          }
        },
        "response": []
      },
      {
        "name": "SearchMailVerificationToken Back",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c15e8800-1d01-401e-8931-03b5d8952041",
              "exec": [
                "",
                "function dynamicSort(property) {",
                "    var sortOrder = 1;",
                "    if(property[0] === \"-\") {",
                "        sortOrder = -1;",
                "        property = property.substr(1);",
                "    }",
                "    return function (a,b) {",
                "        /* next line works with strings and numbers, ",
                "         * and you may want to customize it to your needs",
                "         */",
                "        var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;",
                "        return result * sortOrder;",
                "    }",
                "}",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    var mails = jsonData.items;",
                "",
                "    pm.test(\"Get Token\", function () {",
                "        pm.expect(mails.length).to.be.gt(0);",
                "        //mails.sort(dynamicSort(\"Created\"));",
                "        var mail = mails[0];",
                "        var mbody = mail['Raw']['Data'].replace(/[^a-zA-Z0-9<>:]*\\n/g, \"\");",
                "        console.log(mbody);",
                "        var tokentext = mbody.match(/token:\\s*[^\\s]+/i);",
                "        console.log(tokentext);",
                "        var email_token = tokentext[0].match(/>([A-Za-z0-9]+)</)[1];",
                "        console.log(\"Token: \" + email_token);",
                "        pm.collectionVariables.set(\"email_token\", email_token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "4500a35d-a34a-419b-a641-a63deb9a35a1",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "52e03cf6-c401-4ce3-8e74-bc1da604af14",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "url": {
            "raw": "{{url_mail}}/api/v2/search?kind=to&query={{email}}",
            "host": [
              "{{url_mail}}"
            ],
            "path": [
              "api",
              "v2",
              "search"
            ],
            "query": [
              {
                "key": "kind",
                "value": "to"
              },
              {
                "key": "query",
                "value": "{{email}}"
              }
            ]
          }
        },
        "response": []
      },
      {
        "name": "Verify email token Back",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8ce19507-6497-462d-b850-32b4bae603b6",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "913f1dfe-9f4a-4a67-a191-fd505def4101",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "5c96d385-7d37-46ab-93f5-bb96bb14a7a9",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"old_email\": \"{{new_email}}\", \"new_email\":\"{{email}}\",\"token\":\"{{email_token}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/v2/user/verify-email-token",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "v2",
              "user",
              "verify-email-token"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Login",
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9f78ac74-9343-43a2-93b9-08ac1e0e3495",
              "exec": [
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "    var jsonData = JSON.parse(responseBody);",
                "    pm.collectionVariables.set(\"token\", jsonData.token);",
                "    var token = pm.collectionVariables.get(\"token\");",
                "    pm.test(\"Token is set\", function () {",
                "        pm.expect(jsonData.token).to.eql(token);",
                "    });",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7cba83e4-7c91-45cf-92bd-583d22882cad",
              "exec": [
                "const {Property} = require('postman-collection');\r",
                "var xff = pm.collectionVariables.get('X-Forwarded-For');\r",
                "if (!xff){\r",
                "    xff = Property.replaceSubstitutions('{{$randomIP}}');\r",
                "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);\r",
                "    \r",
                "}\r",
                "pm.collectionVariables.set(\"X-Forwarded-For\", xff);\r",
                "pm.request.headers.remove('X-Forwarded-For');\r",
                "pm.request.headers.add({ \r",
                "    // These keys appears when you set a header by hand. Just for fun they are here\r",
                "    disabled: false,\r",
                "    // Your header, effectively\r",
                "    key: 'X-Forwarded-For', \r",
                "    value: xff\r",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "1c3bdecd-846e-482d-aef5-8cf9957af323",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "POST",
          "header": [
            {
              "key": "User-Agent",
              "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "*/*"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\"email\":\"{{email}}\",\"password\":\"{{password}}\"}"
          },
          "url": {
            "raw": "{{url}}/identity/api/auth/login",
            "host": [
              "{{url}}"
            ],
            "path": [
              "identity",
              "api",
              "auth",
              "login"
            ]
          }
        },
        "response": []
      },
      {
        "name": "Get Public Key",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript",
              "id": "13612403-9af5-4248-b79f-53294102aab5"
            }
          }
        ],
        "id": "3f18f71e-dff2-4e6c-887f-530f5b8dd901",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "auth": {
            "type": "noauth"
          },
          "method": "GET",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{url}}/.well-known/jwks.json",
            "host": [
              "{{url}}"
            ],
            "path": [
              ".well-known",
              "jwks.json"
            ]
          }
        },
        "response": []
      }
    ],
    "auth": {
      "type": "bearer",
      "bearer": [
        {
          "key": "token",
          "value": "{{token}}",
          "type": "string"
        }
      ]
    },
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "e843b75c-a27d-4c6f-bd54-60870722d8d8",
          "type": "text/javascript",
          "exec": [
            "const {Property} = require('postman-collection');",
            "var xff = pm.collectionVariables.get('X-Forwarded-For');",
            "if (!xff){",
            "    xff = Property.replaceSubstitutions('{{$randomIP}}');",
            "    console.log(\"X-Forwarded-For  setting XFF to \"+xff);",
            "    ",
            "}",
            "pm.collectionVariables.set(\"X-Forwarded-For\", xff);",
            "pm.request.headers.remove('X-Forwarded-For');",
            "pm.request.headers.add({ ",
            "    // These keys appears when you set a header by hand. Just for fun they are here",
            "    disabled: false,",
            "    // Your header, effectively",
            "    key: 'X-Forwarded-For', ",
            "    value: xff",
            "});"
          ]
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "f1f15ef0-b0ac-4b31-967f-03e8b2e80fb5",
          "type": "text/javascript",
          "exec": [
            ""
          ]
        }
      }
    ],
    "variable": [
      {
        "id": "976b8d4c-2b5c-4199-bd21-fddf0e9c9204",
        "key": "X-Forwarded-For",
        "value": ""
      },
      {
        "id": "b0be61d8-3e49-46ec-8f34-9751bae846c4",
        "key": "X-Forwarded-For-Admin",
        "value": ""
      },
      {
        "id": "2115e633-b732-4edb-aa53-d037fb45d512",
        "key": "vehicle_id",
        "value": ""
      },
      {
        "id": "5f6e435d-677f-439d-9a83-f6a17ddbd406",
        "key": "name",
        "value": ""
      },
      {
        "id": "c583957b-eb70-4989-8692-eb9170d1b6ec",
        "key": "new_name",
        "value": ""
      },
      {
        "id": "ba19d5ef-b2ec-4be1-a48e-891f208f67d4",
        "key": "email",
        "value": ""
      },
      {
        "id": "d11f3965-a5b0-4bb6-9cce-26f5ab1ece95",
        "key": "new_email",
        "value": ""
      },
      {
        "id": "74164c23-852f-4d8f-9cbf-d315b653962c",
        "key": "password",
        "value": ""
      },
      {
        "id": "b8a812fa-9fb3-4906-934e-988999236b46",
        "key": "phone",
        "value": ""
      },
      {
        "id": "23de9e91-4ef8-4544-959d-82e9333bf74a",
        "key": "token",
        "value": ""
      },
      {
        "id": "3ca15d6a-41fe-4f2a-9b29-70eaa64a5638",
        "key": "VIN",
        "value": ""
      },
      {
        "id": "fe426f51-690f-470f-8bc0-a4d8e2987e54",
        "key": "PIN",
        "value": ""
      },
      {
        "id": "8510b1ab-0fb8-4e2b-8649-7c53717b75e2",
        "key": "report_id",
        "value": ""
      },
      {
        "id": "04a90206-9df3-4270-ab46-d891ec756ce2",
        "key": "product_id",
        "value": ""
      },
      {
        "id": "839cfae5-b1f7-4ba4-ad76-bd1b54a4f32e",
        "key": "order_id",
        "value": ""
      },
      {
        "id": "e9edb208-a992-4df9-936a-bc87d9eefed3",
        "key": "video_id",
        "value": ""
      },
      {
        "id": "e9f45f5f-2733-4115-882c-23f2715a598e",
        "key": "adminToken",
        "value": ""
      },
      {
        "id": "83d244c7-b3e5-4292-ab77-d4f297cc08e1",
        "key": "email_token",
        "value": ""
      }
    ]
  }
}
